#!/bin/sh

cat >/tmp/BB.go <<EOF
// The BB command opens acme on a namespace different from the default one.
// It creates the namespace directory if necessary.
package main

import (
	"log"
	"os"
	"os/exec"
	"path/filepath"
)

func main() {
	namespace := "/tmp/ns2.mpl.:0"
	acme := "/home/mpl/plan9/bin/acme"
	plan9 := "/home/mpl/plan9"
	// TODO(mpl): test if fontsrv is running, and if not, use anon font?
//	varfont := filepath.Join(plan9, "font/fixed/anon/anon.14.font")
//	fixedfont := filepath.Join(plan9, "font/fixed/unicode.10x20.font")
	varfont := "/mnt/font/Go Mono/11a/font"
	fixedfont := "/mnt/font/Go Regular/13a/font"
	shell := filepath.Join(plan9, "bin", "rc")

	if _, err := os.Stat(namespace); err != nil {
		if !os.IsNotExist(err) {
			log.Fatal(err)
		}
		if err := os.MkdirAll(namespace, 0700); err != nil {
			log.Fatal(err)
		}
	}
	args := append([]string{"-f", varfont, "-F", fixedfont}, os.Args[1:]...)
	cmd := exec.Command(acme, args...)
	// Since go1.9 the last en var in the slice is the one that counts, so we should
	// override neither the PATH (harmful), nor the PLAN9 (benign) that is in
	// os.Environ().
	cmd.Env = append(os.Environ(), "NAMESPACE="+namespace, "SHELL="+shell)
	if err := cmd.Run(); err != nil {
		log.Fatalf("%v, %s", err, string(err.(*exec.ExitError).Stderr))
	}
}
EOF

go run /tmp/BB.go $*
